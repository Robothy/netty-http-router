import java.nio.charset.StandardCharsets
import java.util.stream.Collectors

plugins {
    id 'java'
    id 'maven-publish'
    id "com.robothy.cn-repo" version "1.8"
}

group 'com.robothy'

repositories {
    mavenCentral()
}

ext {
    lombokVersion = "1.18.18"
    nettyVersion = '4.1.77.Final'
    jupiterVersion = "5.8.1"
    slf4jVersion = "1.7.36"
    mockitoVersion = "3.4.0"
}

dependencies {
    implementation "io.netty:netty-all:${nettyVersion}"
    implementation "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
    testImplementation "org.mockito:mockito-inline:${mockitoVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"
}

test {
    useJUnitPlatform()
}

tasks.register('releaseVersion') {
    doLast {
        def releaseVersion = version.substring(0, version.lastIndexOf('-'))
        project.setProperty('version', releaseVersion)
        String[] versionParts = releaseVersion.split('\\.')
        versionParts[1] = String.valueOf(Integer.parseInt(versionParts[1]) + 1)
        def nextVersion = String.join(".", versionParts) + '-SNAPSHOT'

        def props = new Properties()
        def propertyFile = file('gradle.properties')
        propertyFile.withInputStream {props.load(it) }
        props.put('version', nextVersion)
        propertyFile.withOutputStream {
            it.write(props.entrySet().stream().map(entry -> "${entry.key}=${entry.value}")
                    .collect(Collectors.joining('\n')).getBytes(StandardCharsets.UTF_8))
            it.flush()
        }
    }
}

publishing {

    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = project.name
            version = System.getenv("PUBLISH_VERSION") ?: version
            from components.java
        }
    }

    repositories {
        mavenLocal()

        repositories {
            mavenLocal()
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/Robothy/netty-http-router")
                credentials {
                    username = project.findProperty("GITHUB_USERNAME") ?: System.getenv("GITHUB_USERNAME")
                    password = project.findProperty("GITHUB_TOKEN") ?: System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }
}