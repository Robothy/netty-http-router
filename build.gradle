plugins {
    id 'java'
    id 'maven-publish'
    id "com.robothy.cn-repo" version "1.8"
    id "robothy-platform-release"
}

group 'com.robothy'

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    lombokVersion = "1.18.24"
    nettyVersion = '4.1.77.Final'
    jupiterVersion = "5.8.1"
    slf4jVersion = "1.7.36"
    mockitoVersion = "3.4.0"
    sprintframeworkVersion = "5.3.23"
}

dependencies {
    implementation "io.netty:netty-all:${nettyVersion}"
    implementation "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.slf4j:slf4j-simple:${slf4jVersion}"
    //implementation "org.springframework:spring-core:${sprintframeworkVersion}"
    implementation "org.springframework:spring-web:${sprintframeworkVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${jupiterVersion}"
    testImplementation "org.mockito:mockito-inline:${mockitoVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"
}

test {
    useJUnitPlatform()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(15)
    }
}

task sourcesJar(type: Jar, group: 'build') {
    from sourceSets.main.allJava
    archiveClassifier.set("sources")
}

artifacts {
    archives sourcesJar
}

publishing {

    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = project.name
            from components.java
            artifact sourcesJar
        }
    }

    repositories {
        mavenLocal()

        repositories {
            mavenLocal()
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/Robothy/netty-http-router")
                credentials {
                    username = project.findProperty("GITHUB_USERNAME") ?: System.getenv("GITHUB_USERNAME")
                    password = project.findProperty("GITHUB_TOKEN") ?: System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }
}


task showProjectVersion {
    doLast {
        println "Project version ${project.version}"
    }
}